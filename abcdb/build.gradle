import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

buildscript {
    dependencies {
        classpath("com.github.docker-java:docker-java-transport-httpclient5:3.3.1") {
            because("M1 macs need a later version of JNA")
        }
    }
}
plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.7.9"
    id("com.google.cloud.tools.jib") version "2.8.0"
}

version = "1.0"
group = "io.micronaut.examples"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.dekorate:kubernetes-annotations")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.dekorate:kubernetes-annotations")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut.kubernetes:micronaut-kubernetes-discovery-client")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")

}


application {
    mainClass.set("io.micronaut.examples.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("io.micronaut.examples.*")
    }
}
dockerfileNative {
    baseImage('ghcr.io/graalvm/native-image:ol7-java17-22.3.2@sha256:e6bad62600da7c81df2b4de80e9d0591aeadae6008be13be155d372fd14413d4')
}
dockerfile {
    baseImage = 'eclipse-temurin:17-jre'
}

tasks.withType(DockerBuildImage) {
    images = ["alvarosanchez/abcdb:$project.version"]
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'io.dekorate') {
            details.useVersion "3.0.0"
        }
    }
}


